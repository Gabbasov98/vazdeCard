$("._tab").click(function() {
    let parentBlock = $(this).parents("._tabs-parent")
    let tabId = $(this).attr("data-tab")
    $(parentBlock).find("._tab").removeClass("_active")
    $(this).addClass("_active")
    $(parentBlock).find(".tab-content").removeClass("_active")
    $(parentBlock).find(`.${tabId}`).addClass("_active")
})

const text = document.querySelector("#typed");
if(text){
    let typed = new Typed('#typed', { // Тут id того блока, в которм будет анимация
        stringsElement: '#typed-strings', // Тут id блока из которого берем строки для анимации
        typeSpeed: 100, // Скорость печати
        startDelay: 500, // Задержка перед стартом анимации
        backSpeed: 50, // Скорость удаления
        loop: true // Указываем, повторять ли анимацию
    });
}


$(".faq-card__show").click(function () {
    $(this).parents(".faq-card").toggleClass("_active")
    $(this).siblings(".faq-card__hidden").slideToggle()
})

const catalog = document.querySelector(".catalog")
if(catalog){
    gsap.registerPlugin(ScrollTrigger);

    const tlCatalog = gsap.timeline({
        scrollTrigger: {
            trigger: '.catalog',
            start: 'top 35%',
            // end: '+=10%',
            // pin: true,
            scrub: 1
        }
    })

    tlCatalog.to('.catalog__item:nth-child(1)', {
        rotate: 45,
        xPercent: 90,
        yPercent: 50,
        ease: "back.out(1.7)",
        duration: 1,
        opacity: 0
    })
    .to('.catalog__item:nth-child(4)', {
        rotate: -45,
        xPercent: -90,
        yPercent: 50,
        ease: "back.out(1.7)",
        duration: 1,
        opacity: 0
    }, '<')
    .to('.catalog__item:nth-child(2)', {
        rotate: 45,
        yPercent: 50,
        ease: "back.out(1.7)",
        duration: 1,
        opacity: 0
    }, '<')
    .to('.catalog__item:nth-child(3)', {
        rotate: -45,
        yPercent: 50,
        ease: "back.out(1.7)",
        duration: 1,
        opacity: 0
    }, '<')
    .to('.catalog__item:nth-child(5)', {
        rotate: 45,
        xPercent: 90,
        ease: "back.out(1.7)",
        duration: 1,
        opacity: 0
    }, '<')
    .to('.catalog__item:nth-child(8)', {
        rotate: -45,
        xPercent: -90,
        ease: "back.out(1.7)",
        duration: 1,
        opacity: 0
    }, '<')
    .to('.catalog__item:nth-child(6)', {
        rotate: 45,
        ease: "back.out(1.7)",
        duration: 1,
        opacity: 0
    }, '<')
    .to('.catalog__item:nth-child(7)', {
        rotate: -45,
        ease: "back.out(1.7)",
        duration: 1,
        opacity: 0
    }, '<')
    .to('.catalog__item:nth-child(9)', {
        rotate: 45,
        xPercent: 90,
        yPercent: -50,
        ease: "back.out(1.7)",
        duration: 1,
        opacity: 0
    }, '<')
    .to('.catalog__item:nth-child(10)', {
        rotate: 45,
        yPercent: -50,
        ease: "back.out(1.7)",
        duration: 1,
        opacity: 0
    }, '<')
    .to('.catalog__logo img', {
        rotate: 0,
        scale: 1,
        ease: "back.out(1.7)",
        duration: 1,
        opacity: 1
    }, '<')
}

$(".burger").click(function () {
    $(".header").toggleClass("_open")
    $("body").toggleClass("fixed-body")
})


function Sliders() {
    let SlidersArray = []

    let sliders = document.querySelectorAll(".slider")
    sliders.forEach((slider,index) => {
        slider.setAttribute("data-slider-id",index)

        SlidersArray[index] = new Swiper(`.slider[data-slider-id="${index}"] .swiper-container`, {
            slidesPerView: "auto",
            spaceBetween: 0,
            watchSlidesProgress: true,
            preventClicks :true,
            a11y: false,
            observer: true,
            observeParents: true,
            observeSlideChildren: true,

            navigation: {
                nextEl: `.slider[data-slider-id="${index}"] .swiper-button-next`,
                prevEl: `.slider[data-slider-id="${index}"] .swiper-button-prev`,
            },
            pagination: {
                el: `.slider[data-slider-id="${index}"] .swiper-pagination`,
                type: 'bullets',
                clickable: true,
            },
        })
    })
}

function gallery() {
    let SlidersArray = []

    let sliders = document.querySelectorAll(".gallery")
    sliders.forEach((slider,index) => {
        slider.setAttribute("data-slider-id",index)
        let gallery = {
            mySwiper: {},
            mySwiper2: {}
        }

        gallery.mySwiper = new Swiper(`.gallery[data-slider-id="${index}"] .mySwiper`, {
            spaceBetween: 0,
            slidesPerView: "auto",
            freeMode: true,
            watchSlidesProgress: true,
            direction: "vertical",
            breakpoints: {
                320: {
                    direction: "horizontal",
                },
                992: {
                    direction: "vertical",
                }
            }
        });
        gallery.mySwiper2 = new Swiper(`.gallery[data-slider-id="${index}"] .mySwiper2`, {
            spaceBetween: 0,
            direction: "vertical",
            loop: true,
            navigation: {
                nextEl: `.gallery[data-slider-id="${index}"] .swiper-button-next`,
                prevEl: `.gallery[data-slider-id="${index}"] .swiper-button-prev`,
            },
            thumbs: {
                swiper:  gallery.mySwiper,
            },
            breakpoints: {
                320: {
                    direction: "horizontal",
                },
                992: {
                    direction: "vertical",
                }
            }
        });

        SlidersArray[index] = gallery
    })

}


Sliders()
gallery()

let fileInput = document.querySelector("[data-upload-id='file-input']")

if(fileInput){
    console.log(fileInput)
    const upload = new FileUploadWithPreview.FileUploadWithPreview('file-input');

    upload.options.multiple = true

    $(document).on('change', '.input-container input', function(e) {
        $(this).parents(".file-input").addClass("_uploaded")
    })

    $(document).on('click', '.image-preview-item-clear', function(e) {
        let count = $(this).parents(".file-input").find(".image-preview-item").length
        if(count === 1){
            $(this).parents(".file-input").removeClass("_uploaded")
        }
    })
}



let body = document.querySelector("body")
let modalTogglers = document.querySelectorAll("[data-modal]")
let modals = document.querySelectorAll(".modal")

modalTogglers.forEach(el => {
    el.onclick = function () {
        let modalId = el.getAttribute("data-modal")
        openModal(modalId)
    }
})

function closeModals() {
    modals.forEach(modal => {
        modal.classList.remove("_active")
        body.classList.remove("fixed-body2")
    })
}

function openModal(modalId) {
    closeModals()
    let modal = document.querySelector(`#${modalId}`)
    let closeButtons = modal.querySelectorAll(`._close-modal`)

    modal.classList.add("_active")
    body.classList.add("fixed-body2")


    closeButtons.forEach(btn => {
        btn.onclick = ()=> {
            modal.classList.remove("_active")
            body.classList.remove("fixed-body2")
        }
    })
}

var getScrollBarSize = (function() {
    var el = window.document.createElement('textarea'), style = {
        'visibility': 'hidden', 'position': 'absolute', 'zIndex': '-2147483647',
        'top': '-1000px', 'left': '-1000px', 'width': '1000px', 'height': '1000px',
        'overflow': 'scroll', 'margin': '0', 'border': '0', 'padding': '0'
    }, support = el.clientWidth !== undefined && el.offsetWidth !== undefined;

    for (var key in style) {
        if (style.hasOwnProperty(key)) {
            el.style[key] = style[key];
        }
    }

    return function() {
        var size = null;
        if (support && window.document.body) {
            window.document.body.appendChild(el);
            size = [el.offsetWidth - el.clientWidth, el.offsetHeight - el.clientHeight];
            window.document.body.removeChild(el);
        }

        document.documentElement.style.setProperty('--scrollWidth', `${size[0]}px`);
        return size;
    };
})();


window.addEventListener('DOMContentLoaded', () => {
    fix100vh();
    window.addEventListener('resize', () => {
        fix100vh();
        getScrollBarSize()
    })

    getScrollBarSize()

})

function fix100vh() {
    let vh = window.innerHeight * 0.01;
    document.documentElement.style.setProperty('--vh', `${vh}px`);
}

//# sourceMappingURL=../sourcemaps/main.min.js.map
